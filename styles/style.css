/* Icon */
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css");
/* Select all */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
:root{
    --primary: #000;
    --secondary: rgb(255, 255, 255);
    --alternative: #6DD13B;
    --clear: #F0716A; 
    --buttonBg: #171717;
}
body {
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}
/* layout */
.container {
    width: 20rem;
    aspect-ratio: 1/1;
    display: grid;
    gap: .8rem;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(7, 1fr);
    background-color: var(--primary);
    padding: .2rem;
}
.container >* {
    width: 100%;
}
.container :first-child {
    grid-column: 1/-1;
    text-align: right;
    font-size: 2rem;
}
/* Display -> flex */
.row[data-menu] {
    grid-column: 1/-1;
    display: flex;
    gap: 2rem;
    padding-block: .2rem;
}
.row[data-menu] i {
    color: var(--secondary);
    padding-inline: .2rem;
}
.row[data-menu] :last-child {
    margin-inline-start: auto;
}
.container button {
    width: 4rem;
    aspect-ratio: 1/1;
    border-radius: 50%;
}
button[data-btnAC] {
    color: var(--clear);
}
/* Operators */
button{
    background-color: var(--buttonBg);
    color: var(--alternative);
}
.container :is(button[data-numbers],
button[data-plusOrMin], 
button[data-btnDec]){
    color: var(--secondary);
}
button[data-btnEqual] {
    background-color: var(--alternative);
    color: var(--secondary);
}
